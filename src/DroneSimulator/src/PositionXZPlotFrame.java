
import java.awt.BorderLayout;
import java.awt.Color;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;


/**
 * La classe PositionXZPlotFrame Ã© un frame che permette di visualizzare 
 * 
 * @author Andrea Rauso
 */
public class PositionXZPlotFrame extends javax.swing.JFrame {

    /**
     * Posizione sull'asse X
     */
    private double positionX; 
    
    /**
     * Posizione sull'asse Z
     */
    private double positionZ;

    /**
     * Creates new form AxesChartFrame
     */
    public PositionXZPlotFrame(double PositionX, double PositionZ) {
        initComponents();
        setSize(600, 400);
        setTitle("DCS Posizione drone vista dall'alto");
        this.positionX = PositionX;
        this.positionZ = PositionZ;
        // Create Dataset
        XYDataset dataset = createDataset();

        //Create chart
        JFreeChart chart = ChartFactory.createScatterPlot(
                "Simulatore dati DJI Tello",
                "Posizione asse X", 
                "Posizione asse Z", 
                dataset
        );
        
        XYPlot xyPlot = (XYPlot) chart.getPlot();
        xyPlot.setDomainCrosshairVisible(true);
        xyPlot.setRangeCrosshairVisible(true);
        XYItemRenderer renderer = xyPlot.getRenderer();
        renderer.setSeriesPaint(0, Color.blue);
        NumberAxis domain = (NumberAxis) xyPlot.getDomainAxis();
        domain.setRange(getPositionX()-10,getPositionX()+10);
        domain.setTickUnit(new NumberTickUnit(1));
        domain.setVerticalTickLabels(true);
        NumberAxis range = (NumberAxis) xyPlot.getRangeAxis();
        range.setRange(getPositionZ()-5,getPositionZ()+5);
        range.setTickUnit(new NumberTickUnit(1));

        ChartPanel panel = new ChartPanel(chart);
        XZPositionChart.setLayout(new java.awt.BorderLayout());
        XZPositionChart.add(panel,BorderLayout.CENTER);
        XZPositionChart.validate();
        
    }
    private XYDataset createDataset() {
        XYSeriesCollection dataset = new XYSeriesCollection();

        XYSeries position = new XYSeries("Posizione");
                
//        position.add(-10, -10);
        position.add(this.positionX, this.positionZ);
        
        dataset.addSeries(position);
        
        return dataset;
    }
    
    private void updateAxesChart(){
        XYDataset dataset = createDataset();
        JFreeChart chart = ChartFactory.createScatterPlot(
                "Simulatore dati rotazione DJI Tello", 
                "Posizione Asse X", 
                "Posizione Asse Y", 
                dataset
        );
        
        XYPlot xyPlot = (XYPlot) chart.getPlot();
        xyPlot.setDomainCrosshairVisible(true);
        xyPlot.setRangeCrosshairVisible(true);
        XYItemRenderer renderer = xyPlot.getRenderer();
        renderer.setSeriesPaint(0, Color.blue);
        NumberAxis domain = (NumberAxis) xyPlot.getDomainAxis();
        domain.setRange(getPositionX()-10,getPositionX()+10);
        domain.setTickUnit(new NumberTickUnit(1));
        domain.setVerticalTickLabels(true);
        NumberAxis range = (NumberAxis) xyPlot.getRangeAxis();
        range.setRange(getPositionZ()-5,getPositionZ()+5);
        range.setTickUnit(new NumberTickUnit(1));
        
        ChartPanel panel = new ChartPanel(chart);
        XZPositionChart.revalidate();
        XZPositionChart.add(panel);
        XZPositionChart.validate();
    }
    
    public double getPositionX() {
        return positionX;
    }

    public double getPositionZ() {
        return positionZ;
    }
    

    public void setPositionX(double rotationX) {
        this.positionX += rotationX;
        updateAxesChart();
    }

    public void setPositionZ(double rotationZ) {
        this.positionZ += rotationZ;
        updateAxesChart();
    }           

    /**
     * Creates new form PositionXZPlotFrame
     */
    public PositionXZPlotFrame() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        XZPositionChart = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout XZPositionChartLayout = new javax.swing.GroupLayout(XZPositionChart);
        XZPositionChart.setLayout(XZPositionChartLayout);
        XZPositionChartLayout.setHorizontalGroup(
            XZPositionChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        XZPositionChartLayout.setVerticalGroup(
            XZPositionChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        getContentPane().add(XZPositionChart, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PositionXZPlotFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PositionXZPlotFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PositionXZPlotFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PositionXZPlotFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PositionXZPlotFrame(0,0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel XZPositionChart;
    // End of variables declaration//GEN-END:variables
}
